<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ES6 on 不如吃茶去</title>
    <link>https://zburu-hugo.vercel.app/tags/es6/</link>
    <description>Recent content in ES6 on 不如吃茶去</description>
    <image>
      <url>https://zburu-hugo.vercel.app/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://zburu-hugo.vercel.app/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 20 Jan 2021 19:58:00 +0000</lastBuildDate><atom:link href="https://zburu-hugo.vercel.app/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ES5 和 ES6 的区别？</title>
      <link>https://zburu-hugo.vercel.app/posts/2021-01-20-es5_%E5%92%8C_es6_%E7%9A%84%E5%8C%BA%E5%88%AB_/</link>
      <pubDate>Wed, 20 Jan 2021 19:58:00 +0000</pubDate>
      
      <guid>https://zburu-hugo.vercel.app/posts/2021-01-20-es5_%E5%92%8C_es6_%E7%9A%84%E5%8C%BA%E5%88%AB_/</guid>
      <description>一、javascript 由三部分组成 1.ECMAScript（核心） 它规定了语言的组成部分：法语，类型，语句，关键字，操作符等等。
2.DOM（文档对象模型） DOM 把整个页面映射为一个多层节点结果，开发人员可借助DOM提供的API，轻松地删除、添加、替换或修改任何节点。
3.BOM（浏览器对象模型） 支持可以访问和操作浏览器窗口的浏览器对象模型，开发人员可以控制浏览器显示的页面以外的部分。
二、什么是ES5？ 作为ECMAScript第五个版本（第四版因为过于复杂废弃了），浏览器支持情况可看第一副图，增加特性如下。
1.strict模式 严格模式，限制一些用法，&amp;lsquo;use strict&amp;rsquo;;
2.Array增加方法 增加了every、some 、forEach、filter 、indexOf、lastIndexOf、isArray、map、reduce、reduceRight方法
PS： 还有其他方法 Function.prototype.bind、String.prototype.trim、Date.now
3.Object方法 Object.getPrototypeOf Object.create Object.getOwnPropertyNames Object.defineProperty Object.getOwnPropertyDescriptor Object.defineProperties Object.keys Object.preventExtensions / Object.isExtensible Object.seal / Object.isSealed Object.freeze / Object.isFrozen PS：只讲有什么，不讲是什么。
2.什么是ES6? ECMAScript6在保证向下兼容的前提下，提供大量新特性，目前浏览器兼容情况如下：
ES6特性如下：
块级作用域 关键字let, 常量const
对象字面量的属性赋值简写（property value shorthand）
var obj = { // __proto__ __proto__: theProtoObj, // Shorthand for ‘handler: handler’ handler, // Method definitions toString() { // Super calls return &amp;#34;d &amp;#34; + super.</description>
    </item>
    
  </channel>
</rss>
