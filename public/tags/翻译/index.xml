<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>翻译 on 不如吃茶去</title>
    <link>https://zburu-hugo.vercel.app/tags/%E7%BF%BB%E8%AF%91/</link>
    <description>Recent content in 翻译 on 不如吃茶去</description>
    <image>
      <url>https://zburu-hugo.vercel.app/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://zburu-hugo.vercel.app/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 05 Nov 2021 12:16:00 +0000</lastBuildDate><atom:link href="https://zburu-hugo.vercel.app/tags/%E7%BF%BB%E8%AF%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>揭秘箭头函数</title>
      <link>https://zburu-hugo.vercel.app/posts/20211105/</link>
      <pubDate>Fri, 05 Nov 2021 12:16:00 +0000</pubDate>
      
      <guid>https://zburu-hugo.vercel.app/posts/20211105/</guid>
      <description>英文地址: https://javascript.plainenglish.io/demystifying-javascript-arrow-functions-7b2a0908a2b3
通过掘金翻译计划活动进行翻译
箭头函数是函数表达式的替代方法，但在语法上有所不同，不能在所有情况下使用。如果您还没有阅读 JavaScript 中的函数表达式，我建议您在继续阅读之前先阅读这篇文章。
现在，让我们试着从语法、执行、作用域和提升以及代码示例方面来理解箭头函数。
1. 语法 const arrowFunctionSyntax = () =&amp;gt; { console.log(&amp;#39;Hi, I am an arrow function&amp;#39;); }; arrowFunctionSyntax(); 在上面的代码示例中，我们可以看到箭头函数类似于函数表达式，因为它们被赋值为变量。 主要区别在于函数的编写方式。 以下是我们可以根据其语法从上述代码中得出的观察结果：
它不包含 function 关键字。 它没有 函数名 ，这意味着这些是匿名函数。 引入了箭头 =&amp;gt; 符号。 const arrowFunctionWithOneParam = (number) =&amp;gt; number + 1; const arrowFunctionWithMultipleParams = (numberOne, numberTwo) =&amp;gt; { let sum = numberOne + numberTwo; return sum; }; console.log(arrowFunctionWithOneParam(5)); console.log(arrowFunctionWithMultipleParams(5, 6)); 如果我们同时观察 arrowFunctionWithOneParam 和 arrowFunctionWithMultipleParams，我们可以发现三者的不同&amp;mdash;括号 ()、块 {} 和 return 关键字的使用。 根据箭头函数的语法，如果函数只接受一个参数，可以忽略括号()。如果函数只包含一条语句，则可以忽略块{}，最后其实也可以忽略return ，如果函数只包含一个语句。</description>
    </item>
    
  </channel>
</rss>
