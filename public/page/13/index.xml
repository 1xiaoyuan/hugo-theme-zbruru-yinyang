<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A Hugo Site</title>
    <link>http://example.org/</link>
    <description>Recent content on A Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Sat, 30 Jul 2022 20:11:00 +0000</lastBuildDate>
    
        <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>js基本语法</title>
        <link>http://example.org/posts/2020-10-21-js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
        <pubDate>Wed, 21 Oct 2020 21:11:00 +0000</pubDate>
        
        <guid>http://example.org/posts/2020-10-21-js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
        <description>A Hugo Site http://example.org/posts/2020-10-21-js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/ -&lt;p&gt;在学习js基本语法的过程中，把遇见的知识点和问题记录喜下来，以便未来复习和参考。&lt;/p&gt;
&lt;p&gt;数据类型有：数据，字符串，数组，数字，布尔值等。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;一数据类型&#34;&gt;一、数据类型&lt;/h2&gt;
&lt;h3 id=&#34;1number&#34;&gt;1.number&lt;/h3&gt;
&lt;h3 id=&#34;2布尔值&#34;&gt;2.布尔值&lt;/h3&gt;
&lt;p&gt;只有true和false两种，可以直接用true和false来表达，比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;;	&lt;span style=&#34;color:#228b22&#34;&gt;//true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;false&lt;/span&gt;;	&lt;span style=&#34;color:#228b22&#34;&gt;//false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;	&lt;span style=&#34;color:#228b22&#34;&gt;//true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;;	&lt;span style=&#34;color:#228b22&#34;&gt;//fasle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;与	&amp;amp;&amp;amp;&lt;/strong&gt;
两者同时为&lt;code&gt;true&lt;/code&gt;，运算结果为&lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;或	||&lt;/strong&gt;
只要有一个为&lt;code&gt;true&lt;/code&gt;，运算结果就是&lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;非	！&lt;/strong&gt;
当程序为&lt;code&gt;true&lt;/code&gt;时，运算结果取反为&lt;code&gt;false&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; age = &lt;span style=&#34;color:#b452cd&#34;&gt;15&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(age &amp;gt;= &lt;span style=&#34;color:#b452cd&#34;&gt;18&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    alert(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;adult&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    alert(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;teenager&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;age值是15，当age大于且等于18的时候浏览器弹出adult，反之弹出teenager&lt;/p&gt;
&lt;h3 id=&#34;3字符串&#34;&gt;3.字符串&lt;/h3&gt;
&lt;h3 id=&#34;4比较运算符&#34;&gt;4.比较运算符&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;==&lt;/code&gt;和&lt;code&gt;===&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当使用&lt;code&gt;==&lt;/code&gt;进行比较的时候，一般会自动转换类型然后再进行比较&lt;/p&gt;
&lt;p&gt;当使用&lt;code&gt;===&lt;/code&gt;进行比较的时候，如果数据类型不一样，直接返回&lt;code&gt;false&lt;/code&gt;，等到类型一致了，然后再进行比较&lt;/p&gt;
&lt;p&gt;有一个特殊的&lt;code&gt;number&lt;/code&gt;就是&lt;code&gt;NaN&lt;/code&gt;，它不与任何值相等，包括它自己&lt;code&gt;NaN&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;NaN&lt;/span&gt; === &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;NaN&lt;/span&gt;	&lt;span style=&#34;color:#228b22&#34;&gt;//false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5null和undefined&#34;&gt;5.&lt;code&gt;null&lt;/code&gt;和&lt;code&gt;undefined&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;null&lt;/code&gt;表示一个空值，&lt;code&gt;0&lt;/code&gt;表示一个数值，&lt;code&gt;&#39;&#39;&lt;/code&gt;表示长度为0的字符串，但是&lt;code&gt;null&lt;/code&gt;表示空&lt;/p&gt;
&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt;表示未定义&lt;/p&gt;
&lt;p&gt;但是区分两者意义不大，大多数还是在用&lt;code&gt;null&lt;/code&gt;，&lt;code&gt;undefined&lt;/code&gt;仅仅在判断函数参数是否传递的情况下有用&lt;/p&gt;
&lt;h3 id=&#34;6数组array&#34;&gt;6.数组Array&lt;/h3&gt;
&lt;p&gt;[ ] ，表示一组按顺序排列的集合，其中的每个值称为元素&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;Array&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;)	&lt;span style=&#34;color:#228b22&#34;&gt;//[1,2,3]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;数组的索引&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;二对象和变量&#34;&gt;二、对象和变量&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; person = {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	name: &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	age: &lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	city: &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hangzhou&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;person&lt;/code&gt;是对象变量，&lt;code&gt;name: &#39;jack&#39;&lt;/code&gt;这就是一个键值对，&lt;code&gt;name&lt;/code&gt;是属性名，&lt;code&gt;&#39;jack&#39;&lt;/code&gt;是属性&lt;/p&gt;
&lt;p&gt;要获取一个对象的属性，用&lt;code&gt;对象变量.属性&lt;/code&gt;，也就是&lt;code&gt;person.name&lt;/code&gt;，结果是&lt;code&gt;jack&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;person.name	&lt;span style=&#34;color:#228b22&#34;&gt;//jack
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;person.age	&lt;span style=&#34;color:#228b22&#34;&gt;//20
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;var&lt;/code&gt;是一个动态语言，就算var定义了x = 100，后面又有x = x+ 100,所以就变成了200,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; x = &lt;span style=&#34;color:#b452cd&#34;&gt;100&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x = x+ &lt;span style=&#34;color:#b452cd&#34;&gt;100&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log(x)	&lt;span style=&#34;color:#228b22&#34;&gt;//200
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;假如用int来定义x，后面的x = x + 100就会报错&lt;/p&gt;
&lt;p&gt;并且使用var定义的变量只会存在与该函数作用域，并不是默认的全局变量&lt;/p&gt;
&lt;p&gt;而如果没有使用&lt;code&gt;var&lt;/code&gt;，直接定义&lt;code&gt;i = 100&lt;/code&gt;，变量i会被默认为全局变量&lt;/p&gt;
&lt;h2 id=&#34;三字符串&#34;&gt;三、字符串&lt;/h2&gt;
&lt;p&gt;需要用到转义字符&lt;code&gt;\&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;1模板字符串&#34;&gt;1.模板字符串&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; name = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;小明&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; age = &lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; message = name + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;今年&amp;#39;&lt;/span&gt; + age + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;了&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;//小明今年20了
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; message = &lt;span style=&#34;color:#cd5555&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;${&lt;/span&gt;naem&lt;span style=&#34;color:#cd5555&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;，你今年&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;了`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;//ES6新增的语法，一样的结果
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;字符串不可改变&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果对字符串的某个索引赋值，不会报错，不会发生任何改变&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; a = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello,world!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a[&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;];	&lt;span style=&#34;color:#228b22&#34;&gt;//h
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;a[&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;] = k;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log(a);	&lt;span style=&#34;color:#228b22&#34;&gt;//结果为&amp;#39;hello,world!&amp;#39;，不会发生改变
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2touppercase大写&#34;&gt;2.toUpperCase大写&lt;/h3&gt;
&lt;p&gt;他会返回一个&lt;code&gt;新的字符串&lt;/code&gt;，把一个字符串全部变成&lt;code&gt;大写&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; a = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.toUpperCase();	&lt;span style=&#34;color:#228b22&#34;&gt;//返回HELLO
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3tolowercase小写&#34;&gt;3.toLowerCase小写&lt;/h3&gt;
&lt;p&gt;他会返回一个&lt;code&gt;新的字符串&lt;/code&gt;，他会把一个字符串全部变成&lt;code&gt;小写&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; a = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.toLowerCase();	&lt;span style=&#34;color:#228b22&#34;&gt;//HELLO
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4indexof&#34;&gt;4.indexOf&lt;/h3&gt;
&lt;p&gt;他会返回指定字符串的索引，如果没有找到指定的字符串，则会返回&lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; a = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello,world!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.indexOf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;world&amp;#39;&lt;/span&gt;);	&lt;span style=&#34;color:#228b22&#34;&gt;//6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5substring&#34;&gt;5.substring&lt;/h3&gt;
&lt;p&gt;他会返回指定&lt;code&gt;区间索引&lt;/code&gt;的字符串，包括前一个数，不包括后一个数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; a = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello,world!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.substrng(&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;);	&lt;span style=&#34;color:#228b22&#34;&gt;//hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果&lt;code&gt;()&lt;/code&gt;里面只有一个数值，则从这个数值的索引开始直到结束，比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; a = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello,world!&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.substring(&lt;span style=&#34;color:#b452cd&#34;&gt;6&lt;/span&gt;);	&lt;span style=&#34;color:#228b22&#34;&gt;//返回world!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;四数组&#34;&gt;四、数组&lt;/h2&gt;
&lt;p&gt;数组&lt;code&gt;Array&lt;/code&gt;可以包含任何类型的数据，并通过索引来访问每个数据&lt;/p&gt;
&lt;h3 id=&#34;1length属性&#34;&gt;1.length属性&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Array&lt;/code&gt;的长度可以用&lt;code&gt;length&lt;/code&gt;属性来获取，它和索引不一样，从1开始计算&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr.length;	&lt;span style=&#34;color:#228b22&#34;&gt;//返回6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;并且通过改变&lt;code&gt;length&lt;/code&gt;的值，可以改变数组的内容大小变化&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr.length;	&lt;span style=&#34;color:#228b22&#34;&gt;//6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;arr.length = &lt;span style=&#34;color:#b452cd&#34;&gt;8&lt;/span&gt;;	&lt;span style=&#34;color:#228b22&#34;&gt;//[1,2,3,&amp;#39;hello&amp;#39;,null,true,undefined,undefined]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;arr.length = &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;;	&lt;span style=&#34;color:#228b22&#34;&gt;//[1,2]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2通过索引改变数组&#34;&gt;2.通过索引改变数组&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Array&lt;/code&gt;可以直接通过索引修改对应的元素&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr[&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;] = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log(arr); 	&lt;span style=&#34;color:#228b22&#34;&gt;//[1,&amp;#39;hello&amp;#39;,3]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;js允许直接通过索引改变数组的长度，不会报错，但是不建议这么做&lt;/p&gt;
&lt;h3 id=&#34;3indexof&#34;&gt;3.indexOf&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Array&lt;/code&gt;可以通过&lt;code&gt;indexOf&lt;/code&gt;来搜索一个指定的元素的索引&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr.indexOf(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);	&lt;span style=&#34;color:#228b22&#34;&gt;//0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;arr.indexOf(&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;); &lt;span style=&#34;color:#228b22&#34;&gt;//2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4slice&#34;&gt;4.slice&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;slice&lt;/code&gt;属性与&lt;code&gt;substring&lt;/code&gt;类似，后者是截取字符串的内容，&lt;code&gt;slice&lt;/code&gt;是截取数组的内容，然后返回一个新的数组&lt;/p&gt;
&lt;p&gt;如果有两个数值，包括前面的数值，不包括后面的数值；如果只有一个数值，则从它开始算起一直到结束&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr.slice[&lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;];	&lt;span style=&#34;color:#228b22&#34;&gt;//返回[1,2]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;arr.slice[&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;];	&lt;span style=&#34;color:#228b22&#34;&gt;//返回[3,4,5]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果&lt;code&gt;slice&lt;/code&gt;不指定数值，则返回数组的全部内容，可以利用这个特性复制一个相同的数组出来&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr1 = arr.slice();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log(arr1);	&lt;span style=&#34;color:#228b22&#34;&gt;//[1,2,3]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;arr1 === arr;	&lt;span style=&#34;color:#228b22&#34;&gt;//true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注意：两个数组相比都是false，就算数组内容一样也会false&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr1 = [&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr === arr1	&lt;span style=&#34;color:#228b22&#34;&gt;//false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;5push和pop&#34;&gt;5.push和pop&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;push()&lt;/code&gt;向数组的末尾添加元素&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pop()&lt;/code&gt;把数组的最后一个元素删掉&lt;/p&gt;
&lt;h3 id=&#34;6unshifth和shift&#34;&gt;6.unshifth和shift&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;unshift()&lt;/code&gt;向数组的头部添加元素&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shift()&lt;/code&gt;把数组的第一个元素删掉&lt;/p&gt;
&lt;h3 id=&#34;7sort&#34;&gt;7.sort&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sort()&lt;/code&gt;可以对数组进行排序，会直接修改当前数组的元素位置，直接调用时，会按照默认的方式排序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [B,A,C]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr.sort();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr	&lt;span style=&#34;color:#228b22&#34;&gt;//[A,B,C]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;8reverse&#34;&gt;8.reverse&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;reverse()&lt;/code&gt;会把整个数组调个个，不是反向排序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr.reverse();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr;	&lt;span style=&#34;color:#228b22&#34;&gt;//[3,1,2]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;9splice&#34;&gt;9.splice&lt;/h3&gt;
&lt;p&gt;这个属性是万能的方法，通过调用&lt;code&gt;splice()&lt;/code&gt;，可以从指定的索引删除元素或者添加元素&lt;/p&gt;
&lt;h2 id=&#34;五条件判断&#34;&gt;五、条件判断&lt;/h2&gt;
&lt;p&gt;在js中，使用 &lt;code&gt;if() {...} else {...}&lt;/code&gt;进行条件判断&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; age = &lt;span style=&#34;color:#b452cd&#34;&gt;22&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(age&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#228b22&#34;&gt;// 如果age&amp;gt;20成立，执行该语句
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;22&amp;gt;20&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#228b22&#34;&gt;// 如果age&amp;gt;20不成立，则执行该语句
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;	conosle.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;22&amp;lt;20&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最终，控制台会打印出&lt;code&gt;22&amp;gt;20&lt;/code&gt;，因为条件成立&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;执行的语句要用&lt;code&gt;{}&lt;/code&gt;包裹起来，防止其他情况会报错&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;多条件判断语句&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;三个或者三个以上多判断语句，被称为多条件判断语句&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; a = &lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(a&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;10&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;a&amp;lt;10&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(a&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;a&amp;gt;10&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;10&amp;lt;=a&amp;lt;=20&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果多个条件中都满足，则取第一个满足的结果，执行其代码，之后满足的自动忽略掉，所以在 进行条件判断的时候，不要重复判断情况&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个复杂的多条件判断语句&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; height = &lt;span style=&#34;color:#658b00&#34;&gt;parseFloat&lt;/span&gt;(prompt(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;请输入身高(m):&amp;#39;&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; weight = &lt;span style=&#34;color:#658b00&#34;&gt;parseFloat&lt;/span&gt;(prompt(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;请输入体重(kg):&amp;#39;&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; bmi = weight/(height*height);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(bmi &amp;lt; &lt;span style=&#34;color:#b452cd&#34;&gt;18.5&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;过轻&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(bmi&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;18.5&lt;/span&gt;,bmi&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;25&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;正常&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(bmi&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;25&lt;/span&gt;,bmi&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;28&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;过重&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(bmi&amp;gt;&lt;span style=&#34;color:#b452cd&#34;&gt;28&lt;/span&gt;,bmi&amp;lt;&lt;span style=&#34;color:#b452cd&#34;&gt;32&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;肥胖&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;严重肥胖&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;parseFloat&lt;/code&gt;可以解析一个字符串，并返回一个数字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;六循环&#34;&gt;六、循环&lt;/h2&gt;
&lt;p&gt;简单的运算可以手打出来&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt; + &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt; + &lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;// 控制台输出 6 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是几百次，几千次，几万次的运算无法手打，可以依靠循环语句来进行计算，为了让计算机能够进行成千上万次的运算&lt;/p&gt;
&lt;p&gt;循环语句有两种for和while，他们有不同的用法，适应不同的情况&lt;/p&gt;
&lt;h3 id=&#34;1-for循环&#34;&gt;1. for循环&lt;/h3&gt;
&lt;p&gt;通过初始条件，结束条件和递增条件来循环执行语句块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; x = &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; i
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(i = &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span style=&#34;color:#b452cd&#34;&gt;1000&lt;/span&gt;; i++) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	x = x + i
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;i = 1是初始条件，i从1开始算起
i&amp;lt;=是判断条件，满足就执行循环，不满足就退出循环
i++是递增条件，每次循环过后都是＋1，当无数次后不满足了i&amp;lt;=1000，会跳出循环&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-通过for语句遍历数组&#34;&gt;2. 通过for语句遍历数组&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; arr = [&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;oringen&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; x,i
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(i = &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; i &amp;lt;= arr.length; i++) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	x = arr[i]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-用break终止for循环&#34;&gt;3. 用break终止for循环&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; x = &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (  ;  ;  ) { &lt;span style=&#34;color:#228b22&#34;&gt;// 将无限循环下去
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (x &amp;gt; &lt;span style=&#34;color:#b452cd&#34;&gt;100&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;break&lt;/span&gt;; &lt;span style=&#34;color:#228b22&#34;&gt;// 通过if判断来退出循环
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x ++;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-forin&#34;&gt;4. for&amp;hellip;in&lt;/h3&gt;
&lt;p&gt;可以把一个对象对属性循环遍历出来&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; person = {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	name: &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	age: &lt;span style=&#34;color:#b452cd&#34;&gt;20&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	city: &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;beijing&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; i &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;in&lt;/span&gt; person) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(i)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	console.log(person[i])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;var i in person&lt;/code&gt;会把person里面所有对属性遍历，然后通过&lt;code&gt;console.log(i)&lt;/code&gt;可以把属性名打印出来，&lt;code&gt;console.log(person[i])&lt;/code&gt;可以把属性值打印出来&lt;/p&gt;
&lt;p&gt;如果对一个数组进行这样的操作，就可以把数组元素对索引打印出来，打印结果是&lt;code&gt;字符串&lt;/code&gt;形式&lt;/p&gt;
&lt;h3 id=&#34;5-while循环&#34;&gt;5. while循环&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;while&lt;/code&gt;循环适用于忽视判断条件的情况，&lt;code&gt;for&lt;/code&gt;适用于明确了初始条件和结束条件的情况&lt;/p&gt;
&lt;p&gt;比如要计算1-100之间的寄数和，可以用&lt;code&gt;while&lt;/code&gt;循环&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; x = &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; n = &lt;span style=&#34;color:#b452cd&#34;&gt;99&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (n &amp;gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	x = x + n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	n = n - &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在变量内部，n不断自减，直接n=-1，不满足判断条件，此时退出循环&lt;/p&gt;
&lt;h3 id=&#34;6-dowhile&#34;&gt;6. do&amp;hellip;while&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;do...while&lt;/code&gt;循环是先循环，然后再判断条件，所以不论条件是否满足，&lt;code&gt;do...while&lt;/code&gt;至少循环一次，这是它与&lt;code&gt;for&lt;/code&gt;和&lt;code&gt;while&lt;/code&gt;的区别&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; n = &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;do&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	n = n + &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(n &amp;gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n;	&lt;span style=&#34;color:#228b22&#34;&gt;//1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先定义&lt;code&gt;n=0&lt;/code&gt;，然后执行&lt;code&gt;n=n+1&lt;/code&gt;，所以&lt;code&gt;n=1&lt;/code&gt;，再判断条件，当n&amp;gt;1的时候执行，不符合，退出循环，控制台输出&lt;code&gt;n&lt;/code&gt;，结果为 &lt;code&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;七map和set&#34;&gt;七、Map和Set&lt;/h2&gt;
&lt;h3 id=&#34;1-map&#34;&gt;1. Map&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Map&lt;/code&gt;是一组键值对的结构，具有极快的查找速度&lt;/p&gt;
&lt;p&gt;只要我们定义一个属性名和属性值对应的数组，就可以从这个数组里面通过name直接查找数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; m = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Map([[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;95&lt;/span&gt;], [&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;Bob&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;94&lt;/span&gt;], [&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;linda&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;93&lt;/span&gt;]])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m.get(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先，要初始化一个&lt;code&gt;Map&lt;/code&gt;数组&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; m = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Map();	&lt;span style=&#34;color:#228b22&#34;&gt;//空map
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;m.set(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;95&lt;/span&gt;)	&lt;span style=&#34;color:#228b22&#34;&gt;//添加一个新的键值对		key-value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;m.has(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;)		&lt;span style=&#34;color:#228b22&#34;&gt;//检查是否存在 &amp;#39;			jack&amp;#39;key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;m.get(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;)		&lt;span style=&#34;color:#228b22&#34;&gt;//获取&amp;#39;jack&amp;#39;对应的数据		value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;m.&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delete&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;)	&lt;span style=&#34;color:#228b22&#34;&gt;//删除&amp;#39;jack&amp;#39;键值对			key-value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;m.get(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;)		&lt;span style=&#34;color:#228b22&#34;&gt;//undefined
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;一个key只能对应一个value，所以如果重复赋值的话，后面的数据会把前面的数据覆盖掉&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; m = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Map();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m.set(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;Adam&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;67&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m.set(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;Adam&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;88&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m.get(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;Adam&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#228b22&#34;&gt;// 88
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-set&#34;&gt;2. Set&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;set&lt;/code&gt;中值储存&lt;code&gt;key&lt;/code&gt;，不储存&lt;code&gt;value&lt;/code&gt;，而且在&lt;code&gt;set&lt;/code&gt;中，&lt;code&gt;key&lt;/code&gt;不能重复，如果重复了，会自动忽略掉重复&lt;/p&gt;
&lt;p&gt;首先，创建一个空的&lt;code&gt;set&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; m = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Set()	&lt;span style=&#34;color:#228b22&#34;&gt;//空set
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;m.add(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)			&lt;span style=&#34;color:#228b22&#34;&gt;//添加一个key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;m.&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delete&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;)			&lt;span style=&#34;color:#228b22&#34;&gt;//删除一个key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;m	&lt;span style=&#34;color:#228b22&#34;&gt;//控制台输入［ ］空数组，没有数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- http://example.org/posts/2020-10-21-js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>对全栈的一些思考</title>
        <link>http://example.org/posts/2020-09-18-%E5%AF%B9%E5%85%A8%E6%A0%88%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</link>
        <pubDate>Fri, 18 Sep 2020 21:10:00 +0000</pubDate>
        
        <guid>http://example.org/posts/2020-09-18-%E5%AF%B9%E5%85%A8%E6%A0%88%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</guid>
        <description>A Hugo Site http://example.org/posts/2020-09-18-%E5%AF%B9%E5%85%A8%E6%A0%88%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/ -&lt;p&gt;这里我要推荐一本书，叫做《Web全栈工程师的自我修养》，在看的过程中，自己也代入进去进行分析，然后写了这篇笔记。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;“全栈工程师正在成为IT行业的新秀，无论是在上市互联网公司还是在创业公司，都对全栈工程师青睐有加。本书作者是腾讯公 司高级工程师，在前端、后端和APP开发方面都有丰富的经验，在本书中分享了全栈工程师的技能与要求、核心竞争力、未来发 展方向、对移动端的思考。除此之外，本书还详细记录了作者从零开始、学习心得。本书内容全面、客观务实适合互联网行业新人 、程序员。以及期待技术转型的从业者阅读参考。”&lt;/p&gt;
&lt;p&gt;作者余果毕业于西安点击科技大学软件工程学院，曾任腾讯社交用户体验设计部高级UI工程师、前端开发负责人，负责多个项目的产品设计，以自身的经历为模板撰写了这本书。&lt;/p&gt;
&lt;p&gt;从自身说起，因为对技术和机器的热爱让他走向了计算机这门行业，而在书中，他也经常提及自己理性和感性思维相结合，对全栈工程师进行了深入分析。&lt;/p&gt;
&lt;p&gt;全栈工程师是指一个能够处理数据库、服务器、系统工程和客户端所有工作的工程师。根据项目的不同，客户需要的可能是移动栈、Web栈，或者原生应用程序栈。这是官方的定义。而以我目前出入前端的思维通俗点来说，大概也就是一个人包揽前端，后端，一个人处理数据进行项目维护，甚至于设计图都是自己做的。&lt;/p&gt;
&lt;p&gt;很多人都说全栈有很多好处，不同担心很多人编写不同步，思维不一致，导致做出来的项目每个人的想法不同，全栈一个人包揽所有的过程，都在自己脑子里。&lt;/p&gt;
&lt;p&gt;可能因为我进入这个行业不久，我认为全栈是不太合理的存在，打个比方说，在流水线还没出现之间，手工作坊基本都是一个人负责所有的产品制作，从原料，制作，打磨，成品，或许很经过很多步骤，但是一个人都可以完美的做出来，就这样类似全栈工程师这样的存在。&lt;/p&gt;
&lt;p&gt;而生产线就更像一个团队，产品，UI，前端，后端测试等，每个人相互配合。&lt;/p&gt;
&lt;p&gt;全栈和团队比起来，我个人觉得团队的优势更大，但架不住老板喜欢一个人干三个人活，更喜欢全栈一点。&lt;/p&gt;
&lt;p&gt;培养一个全栈的花费的时间和精力难以想象，甚至不确定培养一定成功，但是如果专精某一技术领域，成为高级工程师的概率绝对远大于一个全栈。当然这也只是我个人的臆测，并没有具体的数据支撑。&lt;/p&gt;
&lt;p&gt;书中也提及，流水线带来的另一个好处，不会对某个工程师产生依赖性，即使失去这个员工，也可以让被人接手工作&lt;/p&gt;
&lt;p&gt;说了很多团队化的好处，这不代表就没有弊端，肯定是有的，书中总结出来几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工程师职责不清导致效率低&lt;/li&gt;
&lt;li&gt;工程师缺乏主人感导致产品质量差&lt;/li&gt;
&lt;li&gt;工程师缺乏全局的视野影响个人成长&lt;/li&gt;
&lt;li&gt;更多角色导致项目效率低下&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“因为各司其职的工作流程有效率低下、成本高的缺点，所以很多创业公司都不会配备齐全的流水线，而是希望采用更灵活的方式来组建团队，全栈工程师也因此成为了理想的选择。但是全栈工程师的兴起还离不开这两个重要因素：技术的发展，以及提供PaaS服务的平台越来越多。”&lt;/p&gt;
&lt;p&gt;虽然做成为一个全栈工程师需要耗费大量的时间精力来打磨，但是这个思维我还是比较喜欢的。比如说，有a,b,c三个人，分别擅长各自的领域，有一天他们共同负责的项目出了一个小问题，但是问题出在哪里领域还不知道，虽然是个小问题，但需要每个人去查验一遍，因为是三个领域，这就导致应该有两个人的查验是无效的，这从另一个方向来说也降低了项目效率。&lt;/p&gt;
&lt;p&gt;然后这时候，有一个工程师s，注意他不是全栈工程师，只是喜欢学习多领域的技术，掌握了一些不算太高深的技术知识，查验了一遍，很快就找出了问题所在。&lt;/p&gt;
&lt;p&gt;那他一个人效率就相当于三个的效率了，其实这样说并不严谨，我也只是打个比方。&lt;/p&gt;
&lt;p&gt;我突然想到一句话，不知道说的准确与否，&lt;/p&gt;
&lt;p&gt;“全栈的职位存在是不合理的，但全栈的思维是一个有上进心的工程师所必备的。”&lt;/p&gt;
- http://example.org/posts/2020-09-18-%E5%AF%B9%E5%85%A8%E6%A0%88%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>chrome浏览器中对autoplay的一些处理技巧</title>
        <link>http://example.org/posts/2020-09-11-chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E5%AF%B9autoplay%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A4%84%E7%90%86%E6%8A%80%E5%B7%A7/</link>
        <pubDate>Fri, 11 Sep 2020 21:08:00 +0000</pubDate>
        
        <guid>http://example.org/posts/2020-09-11-chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E5%AF%B9autoplay%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A4%84%E7%90%86%E6%8A%80%E5%B7%A7/</guid>
        <description>A Hugo Site http://example.org/posts/2020-09-11-chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E5%AF%B9autoplay%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A4%84%E7%90%86%E6%8A%80%E5%B7%A7/ -&lt;p&gt;我在写博客的时候，想给博客网页添加自己喜欢的音乐，这样我在写作和阅读的时候，心情也会比较愉悦，这个时候，我们就需要用到&lt;code&gt;audio&lt;/code&gt;这个标签。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;audio&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;src&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;audio&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时audio标签还带有很多实用的属性，常用的有以下几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;src &amp;ndash; 这个就不说了，懂的都懂&lt;/li&gt;
&lt;li&gt;autoplay &amp;ndash; 如果出现该属性，音频在就绪后马上播放&lt;/li&gt;
&lt;li&gt;controls &amp;ndash; 网页中显示音频控件&lt;/li&gt;
&lt;li&gt;loop &amp;ndash; 循环播放&lt;/li&gt;
&lt;li&gt;muted &amp;ndash; 默认静音&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是我在设置 autoplay 的时候发现，chrome对自动播放深恶痛绝，直接从根源上限制了这个属性的开启，意思是说，这个属性直接禁用，在打开网页没有交互的情况下，不允许自动播放。&lt;/p&gt;
&lt;p&gt;但仔细想一想，这个做法其实是对用户比较有利的。假设用户使用的时候宽带流量，直接自动播放视频、音频，就会对用户造成损失。甚至一些广告会自动播放，这就直接影响到了用户的体验。所以，对于chrome的做法我还是比较赞同的。&lt;/p&gt;
&lt;p&gt;回过头一想，不对啊，我的目的是解决这个问题，不是夸赞谷歌的。我想给自己的个人博客添加喜欢的音乐，所以我找了一个不算办法的办法。我直接在模拟一个事件，当鼠标点击网页任意处的时候，自动触发autoplay的音频效果，直接上代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;script&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;function&lt;/span&gt; toggleSound() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;var&lt;/span&gt; music = &lt;span style=&#34;color:#658b00&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;vd&amp;#34;&lt;/span&gt;);          
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#228b22&#34;&gt;//获取ID  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;      console.log(music);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      console.log(music.paused);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (music.paused) { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;//判读是否播放  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        music.paused=&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;false&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        music.play(); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;//没有就播放 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;      }  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    setInterval(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;toggleSound()&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样处理过之后，插入音频，任意点击网页某个地方，都会触发播放效果，但凡事有利有弊，这样做的话，一旦开启播放，将无法启用暂停功能，也就是说会一直播放下去&lt;/p&gt;
&lt;p&gt;如果是像我这样写个人博客，这个弊端倒是影响不大，我在这里记录一下这个方法。&lt;/p&gt;
- http://example.org/posts/2020-09-11-chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E5%AF%B9autoplay%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A4%84%E7%90%86%E6%8A%80%E5%B7%A7/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>推荐书籍《CSS世界》</title>
        <link>http://example.org/posts/2020-08-11-%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8Dcss%E4%B8%96%E7%95%8C/</link>
        <pubDate>Tue, 11 Aug 2020 21:09:00 +0000</pubDate>
        
        <guid>http://example.org/posts/2020-08-11-%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8Dcss%E4%B8%96%E7%95%8C/</guid>
        <description>A Hugo Site http://example.org/posts/2020-08-11-%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8Dcss%E4%B8%96%E7%95%8C/ -&lt;p&gt;本书从前端开发人员的需求出发，以“流”为线索，从结构、内容到美化装饰灯方面，全面且深入地讲解前端开发人员必须了解和掌握的大量的CSS知识点。同时，作者结合多年的从业经验，通过大量的实战案例，详尽解析CSS的相关知识与常见问题。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;作者还为本书开发了专门的配套网站，进行实例展示。问题答疑。作为一本CSS深度学习的书，书中介绍大量许多前端开发人员都不知道的CSS知识点。通过阅读本书，读者会对CSS世界的深度和广度有一个全新的认识。&lt;/p&gt;
&lt;p&gt;这本书作者采用口语化的方式，讲述在css中遇到的一些有意思的问题，循序渐进，引人入胜，对有前端基础的人来说，读这本书还是很有意思的。我经常在闲余时间看看这本书，会给我一些启发。&lt;/p&gt;
- http://example.org/posts/2020-08-11-%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8Dcss%E4%B8%96%E7%95%8C/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>文字溢出隐藏以及和flex冲突的问题</title>
        <link>http://example.org/posts/2020-08-03-%E6%96%87%E5%AD%97%E6%BA%A2%E5%87%BA%E9%9A%90%E8%97%8F%E4%BB%A5%E5%8F%8A%E5%92%8Cflex%E5%86%B2%E7%AA%81%E7%9A%84%E9%97%AE%E9%A2%98/</link>
        <pubDate>Mon, 03 Aug 2020 21:08:00 +0000</pubDate>
        
        <guid>http://example.org/posts/2020-08-03-%E6%96%87%E5%AD%97%E6%BA%A2%E5%87%BA%E9%9A%90%E8%97%8F%E4%BB%A5%E5%8F%8A%E5%92%8Cflex%E5%86%B2%E7%AA%81%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
        <description>A Hugo Site http://example.org/posts/2020-08-03-%E6%96%87%E5%AD%97%E6%BA%A2%E5%87%BA%E9%9A%90%E8%97%8F%E4%BB%A5%E5%8F%8A%E5%92%8Cflex%E5%86%B2%E7%AA%81%E7%9A%84%E9%97%AE%E9%A2%98/ -&lt;p&gt;在某些段落中，页面要求文字只显示一行，但是&lt;code&gt;width&lt;/code&gt;固定，而文字过长，就会出现一个需求，超过长度限制的文字被隐藏且显示省略号，css 支持这样的属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单行文本溢出隐藏&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;div&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;overflow&lt;/span&gt;: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;hidden&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;white-space&lt;/span&gt;: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;nowrap&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;text-overflow&lt;/span&gt;: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ellipsis&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;多行文本溢出隐藏&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;div&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;-webkit-&lt;/span&gt;box;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;-webkit-&lt;/span&gt;box-orient: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;vertical&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;-webkit-&lt;/span&gt;line-clamp: &lt;span style=&#34;color:#b452cd&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;overflow&lt;/span&gt;: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;hidden&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;简单的几行代码就可以达到我们的要求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但是有一个我们需要注意的地方！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;flex布局是前端写代码经常使用的一种布局方式，简单便捷且有效，但是在&lt;!-- raw HTML omitted --&gt;使用flex布局的元素中不能同时使用文字溢出隐藏&lt;!-- raw HTML omitted --&gt;,也就是两者不能同时出现在同一标签中。&lt;/p&gt;
&lt;p&gt;这里，我们也有对应的解决办法。&lt;/p&gt;
&lt;p&gt;只要保证flex布局和隐藏的样式不在同级元素中就可以，所以在文字外部多包裹一层标签。&lt;/p&gt;
&lt;p&gt;可以采用下面这段代码的写法；&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;p&lt;/span&gt;&amp;gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;&amp;lt;!-- 我们在这一层的标签进行flex布局 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;  &lt;span style=&#34;color:#228b22&#34;&gt;&amp;lt;!-- 这一层的标签我们引入文字过长隐藏的样式 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;&amp;lt;!-- 文本 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- http://example.org/posts/2020-08-03-%E6%96%87%E5%AD%97%E6%BA%A2%E5%87%BA%E9%9A%90%E8%97%8F%E4%BB%A5%E5%8F%8A%E5%92%8Cflex%E5%86%B2%E7%AA%81%E7%9A%84%E9%97%AE%E9%A2%98/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>vue生命周期</title>
        <link>http://example.org/posts/2020-06-19-vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
        <pubDate>Fri, 19 Jun 2020 21:07:00 +0000</pubDate>
        
        <guid>http://example.org/posts/2020-06-19-vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
        <description>A Hugo Site http://example.org/posts/2020-06-19-vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/ -&lt;p&gt;学习vue中一个非常重要的领域，就是生命周期，它包含了很多的内容。每个vue实例在被创建的时候都要经历一系列的初始化过程，这个过程就是vue的生命周期。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;每个vue实例在被创建的时候都要经过一系列的初始化过程——例如，需要把设置数据监听、编译模板、将实例挂载到DOM并在数据变化时更新DOM等，我们要把这一系列的过程称为组件的&lt;code&gt;生命周期&lt;/code&gt;（组件从注册到销毁的整个过程）。我们有时候需要在组件生命周期的某个过程中，执行某些代码，基于此，vue提供了&lt;code&gt;生命周期钩子函数&lt;/code&gt;，给了用户在不同阶段添加自己的代码的机会。&lt;/p&gt;
&lt;p&gt;但是在此之前，我们要详细的介绍下组件的生命周期，以及生命后期中每个阶段组件完成和未完成的部分。&lt;/p&gt;
&lt;h2 id=&#34;一组件的生命周期&#34;&gt;一、组件的生命周期&lt;/h2&gt;
&lt;p&gt;放一张大家都很熟悉的官网文章中对生命周期的注释图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/580fd8d7-79c4-4321-a3d3-fb6b34b07558.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出，vue为生命周期提供了8个钩子函数，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;beforeCreate: 创建前&lt;/li&gt;
&lt;li&gt;created: 创建后&lt;/li&gt;
&lt;li&gt;beforeMount: 挂载前&lt;/li&gt;
&lt;li&gt;mounted: 挂载后&lt;/li&gt;
&lt;li&gt;beforeUpate: 更新前&lt;/li&gt;
&lt;li&gt;upated: 更新后&lt;/li&gt;
&lt;li&gt;beforeDestoy: 销毁前&lt;/li&gt;
&lt;li&gt;destoyed: 销毁后&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1beforecreate&#34;&gt;1.beforeCreate&lt;/h3&gt;
&lt;p&gt;beforeCreate在vue实例发生之后，数据观测(data observer) 和 event/watcher 事件配置之前被调用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f7f07267-2aaa-49c2-96af-b6021a5edbd7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们在上面的例子中在的beforeCreate钩子中调用Vue的data和method，来看一下结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/4e664a14-7e93-4657-bd5b-5640944858b4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到Vue中的data和方法都是去不到的，并且是在wath之前执行&lt;/p&gt;
&lt;h3 id=&#34;2created&#34;&gt;2.created&lt;/h3&gt;
&lt;p&gt;实例已经创建完成之后被调用。在这一步，实例已完成以下的配置：数据观测(data observer)，属性和方法的运算， watch/event 事件回调。然而，挂载阶段还没开始，$el 属性目前不可见。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要应用&lt;/strong&gt;：调用数据，调用方法，调用异步函数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/11d148d4-3014-4d75-bea9-f4dd4db37805.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;console输出的结果我们看一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/c0a73a2b-a279-49cb-a753-f286415aa9a9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到：created钩子可以获取Vue的data，调用Vue方法，获取原本HTML上的直接加载出来的DOM，但是无法获取到通过挂载模板生成的DOM（例如：v-for循环遍历Vue.list生成li）&lt;/p&gt;
&lt;h3 id=&#34;3beforemount&#34;&gt;3.beforeMount&lt;/h3&gt;
&lt;p&gt;在挂载开始之前被调用：相关的 render 函数（模板）首次被调用。&lt;/p&gt;
&lt;p&gt;例如通过v-for生成的html还没有被挂载到页面上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; beforeMount: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;function&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;beforeMount:&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#658b00&#34;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;).length);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;console打印出来的beforeMount为1&lt;/p&gt;
&lt;h3 id=&#34;4mounted&#34;&gt;4.mounted&lt;/h3&gt;
&lt;p&gt;el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有初始值的DOM渲染，例如我们的初始数据list,渲染出来的li，只有这里才能获取&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; mounted: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;function&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;mounted:&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#658b00&#34;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;).length);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结果 mounted: 3 , 可以看到到这里为止，挂载到实例上了，我们可以获取到li的个数了&lt;/p&gt;
&lt;h3 id=&#34;5beforeupdate&#34;&gt;5.beforeUpdate&lt;/h3&gt;
&lt;p&gt;数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。 你可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程。&lt;/p&gt;
&lt;p&gt;当我们更改Vue的任何数据，都会触发该函数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; beforeUpdate: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;function&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;beforeUpdate 钩子执行.&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;beforeUpdate:&amp;#39;&lt;/span&gt;+&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.message)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;6updated&#34;&gt;6.updated&lt;/h3&gt;
&lt;p&gt;由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。&lt;/p&gt;
&lt;p&gt;当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态，因为这可能会导致更新无限循环。&lt;/p&gt;
&lt;p&gt;该钩子在服务器端渲染期间不被调用。&lt;/p&gt;
&lt;p&gt;数据更新就会触发（vue所有的数据只有有更新就会触发）,如果想数据一遍就做统一的处理，可以用这个，如果想对不同数据的更新做不同的处理可以用nextTick，或者是watch进行监听&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; updated: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;function&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;updated 钩子执行...&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console.log(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;updated:&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.message)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;7beforedestroy&#34;&gt;7.beforeDestroy&lt;/h3&gt;
&lt;p&gt;实例销毁之前调用。在这一步，实例仍然完全可用。&lt;/p&gt;
&lt;h3 id=&#34;8destroyed&#34;&gt;8.destroyed&lt;/h3&gt;
&lt;p&gt;Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。 该钩子在服务器端渲染期间不被调用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/4f337570-7d4e-41ff-84f4-c198076077e7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/a5c2e40a-9be7-4b8b-8beb-5371cf727878.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看打到销毁Vue实例时会调用这两个函数&lt;/p&gt;
- http://example.org/posts/2020-06-19-vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>hello, world</title>
        <link>http://example.org/posts/2020-06-14-hello_world/</link>
        <pubDate>Sun, 14 Jun 2020 20:57:00 +0000</pubDate>
        
        <guid>http://example.org/posts/2020-06-14-hello_world/</guid>
        <description>A Hugo Site http://example.org/posts/2020-06-14-hello_world/ -&lt;p&gt;2020年6月14日&lt;/p&gt;
&lt;p&gt;我的博客正式建立。&lt;/p&gt;
&lt;p&gt;愿一切安好。&lt;/p&gt;
- http://example.org/posts/2020-06-14-hello_world/ - This is a customized copyright.</description>
        </item>
    
    
    
    
    
    
  </channel>
</rss> 